// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: from_yate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "from_yate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace microsoft {
namespace cellsar {
namespace protobuf {
namespace yate {
class PhyDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PhyData>
     _instance;
} _PhyData_default_instance_;
class StatusDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StatusData>
     _instance;
} _StatusData_default_instance_;
class YbtsData_YbtsTimeoutDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YbtsData_YbtsTimeoutData>
     _instance;
} _YbtsData_YbtsTimeoutData_default_instance_;
class YbtsData_YbtsStopnotificationDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YbtsData_YbtsStopnotificationData>
     _instance;
} _YbtsData_YbtsStopnotificationData_default_instance_;
class YbtsDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YbtsData>
     _instance;
} _YbtsData_default_instance_;
class SmsDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SmsData>
     _instance;
} _SmsData_default_instance_;
class SmsFailedDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SmsFailedData>
     _instance;
} _SmsFailedData_default_instance_;
class YateMessageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<YateMessage>
     _instance;
} _YateMessage_default_instance_;

namespace protobuf_from_5fyate_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, subscriber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, ta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, te_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, up_rssi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, dn_rssi_dbm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PhyData, tx_pwr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, engine_started_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, radio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, pending_smss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StatusData, subscribers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData_YbtsTimeoutData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData_YbtsTimeoutData, timeout_for_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData_YbtsStopnotificationData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData_YbtsStopnotificationData, restarting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData_YbtsStopnotificationData, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData, ybts_timeout_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YbtsData, ybts_stopnotification_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsData, subscriber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsData, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, to_subscriber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, silent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, silent_sms_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, from_subscriber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SmsFailedData, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, phy_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, status_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, ybts_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, sms_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YateMessage, sms_failed_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PhyData)},
  { 11, -1, sizeof(StatusData)},
  { 20, -1, sizeof(YbtsData_YbtsTimeoutData)},
  { 26, -1, sizeof(YbtsData_YbtsStopnotificationData)},
  { 33, -1, sizeof(YbtsData)},
  { 41, -1, sizeof(SmsData)},
  { 48, -1, sizeof(SmsFailedData)},
  { 60, -1, sizeof(YateMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PhyData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StatusData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YbtsData_YbtsTimeoutData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YbtsData_YbtsStopnotificationData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YbtsData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SmsData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SmsFailedData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_YateMessage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "from_yate.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::com::microsoft::cellsar::protobuf::protobuf_data_2eproto::InitDefaults();
  _PhyData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PhyData_default_instance_);_StatusData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StatusData_default_instance_);_YbtsData_YbtsTimeoutData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YbtsData_YbtsTimeoutData_default_instance_);_YbtsData_YbtsStopnotificationData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YbtsData_YbtsStopnotificationData_default_instance_);_YbtsData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YbtsData_default_instance_);_SmsData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SmsData_default_instance_);_SmsFailedData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SmsFailedData_default_instance_);_YateMessage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_YateMessage_default_instance_);_PhyData_default_instance_._instance.get_mutable()->subscriber_ = const_cast< ::com::microsoft::cellsar::protobuf::Subscriber*>(
      ::com::microsoft::cellsar::protobuf::Subscriber::internal_default_instance());
  _StatusData_default_instance_._instance.get_mutable()->radio_ = const_cast< ::com::microsoft::cellsar::protobuf::Radio*>(
      ::com::microsoft::cellsar::protobuf::Radio::internal_default_instance());
  _YbtsData_default_instance_._instance.get_mutable()->ybts_timeout_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData*>(
      ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData::internal_default_instance());
  _YbtsData_default_instance_._instance.get_mutable()->ybts_stopnotification_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData*>(
      ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData::internal_default_instance());
  _SmsData_default_instance_._instance.get_mutable()->subscriber_ = const_cast< ::com::microsoft::cellsar::protobuf::Subscriber*>(
      ::com::microsoft::cellsar::protobuf::Subscriber::internal_default_instance());
  _SmsFailedData_default_instance_._instance.get_mutable()->to_subscriber_ = const_cast< ::com::microsoft::cellsar::protobuf::Subscriber*>(
      ::com::microsoft::cellsar::protobuf::Subscriber::internal_default_instance());
  _SmsFailedData_default_instance_._instance.get_mutable()->from_subscriber_ = const_cast< ::com::microsoft::cellsar::protobuf::Subscriber*>(
      ::com::microsoft::cellsar::protobuf::Subscriber::internal_default_instance());
  _YateMessage_default_instance_._instance.get_mutable()->phy_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::PhyData*>(
      ::com::microsoft::cellsar::protobuf::yate::PhyData::internal_default_instance());
  _YateMessage_default_instance_._instance.get_mutable()->status_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::StatusData*>(
      ::com::microsoft::cellsar::protobuf::yate::StatusData::internal_default_instance());
  _YateMessage_default_instance_._instance.get_mutable()->ybts_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::YbtsData*>(
      ::com::microsoft::cellsar::protobuf::yate::YbtsData::internal_default_instance());
  _YateMessage_default_instance_._instance.get_mutable()->sms_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::SmsData*>(
      ::com::microsoft::cellsar::protobuf::yate::SmsData::internal_default_instance());
  _YateMessage_default_instance_._instance.get_mutable()->sms_failed_data_ = const_cast< ::com::microsoft::cellsar::protobuf::yate::SmsFailedData*>(
      ::com::microsoft::cellsar::protobuf::yate::SmsFailedData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017from_yate.proto\022#com.microsoft.cellsar"
      ".protobuf.yate\032\ndata.proto\"\227\001\n\007PhyData\022>"
      "\n\nsubscriber\030\001 \001(\0132*.com.microsoft.cells"
      "ar.protobuf.Subscriber\022\n\n\002ta\030\002 \001(\r\022\n\n\002te"
      "\030\003 \001(\002\022\017\n\007up_rssi\030\004 \001(\002\022\023\n\013dn_rssi_dbm\030\005"
      " \001(\002\022\016\n\006tx_pwr\030\006 \001(\002\"\261\001\n\nStatusData\022\026\n\016e"
      "ngine_started\030\001 \001(\010\0224\n\005radio\030\002 \001(\0132%.com"
      ".microsoft.cellsar.protobuf.Radio\022\024\n\014pen"
      "ding_smss\030\003 \001(\r\022\?\n\013subscribers\030\004 \003(\0132*.c"
      "om.microsoft.cellsar.protobuf.Subscriber"
      "\"\306\002\n\010YbtsData\022\014\n\004type\030\001 \001(\t\022X\n\021ybts_time"
      "out_data\030\002 \001(\0132=.com.microsoft.cellsar.p"
      "rotobuf.yate.YbtsData.YbtsTimeoutData\022j\n"
      "\032ybts_stopnotification_data\030\003 \001(\0132F.com."
      "microsoft.cellsar.protobuf.yate.YbtsData"
      ".YbtsStopnotificationData\032&\n\017YbtsTimeout"
      "Data\022\023\n\013timeout_for\030\001 \001(\t\032>\n\030YbtsStopnot"
      "ificationData\022\022\n\nrestarting\030\001 \001(\010\022\016\n\006rea"
      "son\030\002 \001(\t\"V\n\007SmsData\022>\n\nsubscriber\030\001 \001(\013"
      "2*.com.microsoft.cellsar.protobuf.Subscr"
      "iber\022\013\n\003msg\030\002 \001(\t\"\355\001\n\rSmsFailedData\022A\n\rt"
      "o_subscriber\030\001 \001(\0132*.com.microsoft.cells"
      "ar.protobuf.Subscriber\022\r\n\005error\030\002 \001(\t\022\016\n"
      "\006reason\030\003 \001(\t\022\016\n\006silent\030\004 \001(\010\022\030\n\020silent_"
      "sms_count\030\005 \001(\004\022C\n\017from_subscriber\030\006 \001(\013"
      "2*.com.microsoft.cellsar.protobuf.Subscr"
      "iber\022\013\n\003msg\030\007 \001(\t\"\376\002\n\013YateMessage\022\014\n\004typ"
      "e\030\001 \001(\t\022\014\n\004time\030\002 \001(\004\022>\n\010phy_data\030\003 \001(\0132"
      ",.com.microsoft.cellsar.protobuf.yate.Ph"
      "yData\022D\n\013status_data\030\004 \001(\0132/.com.microso"
      "ft.cellsar.protobuf.yate.StatusData\022@\n\ty"
      "bts_data\030\005 \001(\0132-.com.microsoft.cellsar.p"
      "rotobuf.yate.YbtsData\022>\n\010sms_data\030\006 \001(\0132"
      ",.com.microsoft.cellsar.protobuf.yate.Sm"
      "sData\022K\n\017sms_failed_data\030\007 \001(\01322.com.mic"
      "rosoft.cellsar.protobuf.yate.SmsFailedDa"
      "tab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1450);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "from_yate.proto", &protobuf_RegisterTypes);
  ::com::microsoft::cellsar::protobuf::protobuf_data_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_from_5fyate_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhyData::kSubscriberFieldNumber;
const int PhyData::kTaFieldNumber;
const int PhyData::kTeFieldNumber;
const int PhyData::kUpRssiFieldNumber;
const int PhyData::kDnRssiDbmFieldNumber;
const int PhyData::kTxPwrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhyData::PhyData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.PhyData)
}
PhyData::PhyData(const PhyData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_subscriber()) {
    subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber(*from.subscriber_);
  } else {
    subscriber_ = NULL;
  }
  ::memcpy(&ta_, &from.ta_,
    static_cast<size_t>(reinterpret_cast<char*>(&tx_pwr_) -
    reinterpret_cast<char*>(&ta_)) + sizeof(tx_pwr_));
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.PhyData)
}

void PhyData::SharedCtor() {
  ::memset(&subscriber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_pwr_) -
      reinterpret_cast<char*>(&subscriber_)) + sizeof(tx_pwr_));
  _cached_size_ = 0;
}

PhyData::~PhyData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.PhyData)
  SharedDtor();
}

void PhyData::SharedDtor() {
  if (this != internal_default_instance()) delete subscriber_;
}

void PhyData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PhyData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhyData& PhyData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

PhyData* PhyData::New(::google::protobuf::Arena* arena) const {
  PhyData* n = new PhyData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PhyData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && subscriber_ != NULL) {
    delete subscriber_;
  }
  subscriber_ = NULL;
  ::memset(&ta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tx_pwr_) -
      reinterpret_cast<char*>(&ta_)) + sizeof(tx_pwr_));
  _internal_metadata_.Clear();
}

bool PhyData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subscriber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float te = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &te_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float up_rssi = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &up_rssi_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float dn_rssi_dbm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &dn_rssi_dbm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tx_pwr = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tx_pwr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.PhyData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.PhyData)
  return false;
#undef DO_
}

void PhyData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
  if (this->has_subscriber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->subscriber_, output);
  }

  // uint32 ta = 2;
  if (this->ta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ta(), output);
  }

  // float te = 3;
  if (this->te() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->te(), output);
  }

  // float up_rssi = 4;
  if (this->up_rssi() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->up_rssi(), output);
  }

  // float dn_rssi_dbm = 5;
  if (this->dn_rssi_dbm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->dn_rssi_dbm(), output);
  }

  // float tx_pwr = 6;
  if (this->tx_pwr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->tx_pwr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.PhyData)
}

::google::protobuf::uint8* PhyData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
  if (this->has_subscriber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->subscriber_, deterministic, target);
  }

  // uint32 ta = 2;
  if (this->ta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ta(), target);
  }

  // float te = 3;
  if (this->te() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->te(), target);
  }

  // float up_rssi = 4;
  if (this->up_rssi() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->up_rssi(), target);
  }

  // float dn_rssi_dbm = 5;
  if (this->dn_rssi_dbm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->dn_rssi_dbm(), target);
  }

  // float tx_pwr = 6;
  if (this->tx_pwr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->tx_pwr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.PhyData)
  return target;
}

size_t PhyData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
  if (this->has_subscriber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subscriber_);
  }

  // uint32 ta = 2;
  if (this->ta() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ta());
  }

  // float te = 3;
  if (this->te() != 0) {
    total_size += 1 + 4;
  }

  // float up_rssi = 4;
  if (this->up_rssi() != 0) {
    total_size += 1 + 4;
  }

  // float dn_rssi_dbm = 5;
  if (this->dn_rssi_dbm() != 0) {
    total_size += 1 + 4;
  }

  // float tx_pwr = 6;
  if (this->tx_pwr() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PhyData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  GOOGLE_DCHECK_NE(&from, this);
  const PhyData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhyData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.PhyData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.PhyData)
    MergeFrom(*source);
  }
}

void PhyData::MergeFrom(const PhyData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_subscriber()) {
    mutable_subscriber()->::com::microsoft::cellsar::protobuf::Subscriber::MergeFrom(from.subscriber());
  }
  if (from.ta() != 0) {
    set_ta(from.ta());
  }
  if (from.te() != 0) {
    set_te(from.te());
  }
  if (from.up_rssi() != 0) {
    set_up_rssi(from.up_rssi());
  }
  if (from.dn_rssi_dbm() != 0) {
    set_dn_rssi_dbm(from.dn_rssi_dbm());
  }
  if (from.tx_pwr() != 0) {
    set_tx_pwr(from.tx_pwr());
  }
}

void PhyData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhyData::CopyFrom(const PhyData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.PhyData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhyData::IsInitialized() const {
  return true;
}

void PhyData::Swap(PhyData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhyData::InternalSwap(PhyData* other) {
  using std::swap;
  swap(subscriber_, other->subscriber_);
  swap(ta_, other->ta_);
  swap(te_, other->te_);
  swap(up_rssi_, other->up_rssi_);
  swap(dn_rssi_dbm_, other->dn_rssi_dbm_);
  swap(tx_pwr_, other->tx_pwr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PhyData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PhyData

// .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
bool PhyData::has_subscriber() const {
  return this != internal_default_instance() && subscriber_ != NULL;
}
void PhyData::clear_subscriber() {
  if (GetArenaNoVirtual() == NULL && subscriber_ != NULL) delete subscriber_;
  subscriber_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::Subscriber& PhyData::subscriber() const {
  const ::com::microsoft::cellsar::protobuf::Subscriber* p = subscriber_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.PhyData.subscriber)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::Subscriber*>(
      &::com::microsoft::cellsar::protobuf::_Subscriber_default_instance_);
}
::com::microsoft::cellsar::protobuf::Subscriber* PhyData::mutable_subscriber() {
  
  if (subscriber_ == NULL) {
    subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.PhyData.subscriber)
  return subscriber_;
}
::com::microsoft::cellsar::protobuf::Subscriber* PhyData::release_subscriber() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.PhyData.subscriber)
  
  ::com::microsoft::cellsar::protobuf::Subscriber* temp = subscriber_;
  subscriber_ = NULL;
  return temp;
}
void PhyData::set_allocated_subscriber(::com::microsoft::cellsar::protobuf::Subscriber* subscriber) {
  delete subscriber_;
  subscriber_ = subscriber;
  if (subscriber) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.PhyData.subscriber)
}

// uint32 ta = 2;
void PhyData::clear_ta() {
  ta_ = 0u;
}
::google::protobuf::uint32 PhyData::ta() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.PhyData.ta)
  return ta_;
}
void PhyData::set_ta(::google::protobuf::uint32 value) {
  
  ta_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.PhyData.ta)
}

// float te = 3;
void PhyData::clear_te() {
  te_ = 0;
}
float PhyData::te() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.PhyData.te)
  return te_;
}
void PhyData::set_te(float value) {
  
  te_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.PhyData.te)
}

// float up_rssi = 4;
void PhyData::clear_up_rssi() {
  up_rssi_ = 0;
}
float PhyData::up_rssi() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.PhyData.up_rssi)
  return up_rssi_;
}
void PhyData::set_up_rssi(float value) {
  
  up_rssi_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.PhyData.up_rssi)
}

// float dn_rssi_dbm = 5;
void PhyData::clear_dn_rssi_dbm() {
  dn_rssi_dbm_ = 0;
}
float PhyData::dn_rssi_dbm() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.PhyData.dn_rssi_dbm)
  return dn_rssi_dbm_;
}
void PhyData::set_dn_rssi_dbm(float value) {
  
  dn_rssi_dbm_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.PhyData.dn_rssi_dbm)
}

// float tx_pwr = 6;
void PhyData::clear_tx_pwr() {
  tx_pwr_ = 0;
}
float PhyData::tx_pwr() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.PhyData.tx_pwr)
  return tx_pwr_;
}
void PhyData::set_tx_pwr(float value) {
  
  tx_pwr_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.PhyData.tx_pwr)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatusData::kEngineStartedFieldNumber;
const int StatusData::kRadioFieldNumber;
const int StatusData::kPendingSmssFieldNumber;
const int StatusData::kSubscribersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatusData::StatusData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.StatusData)
}
StatusData::StatusData(const StatusData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscribers_(from.subscribers_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_radio()) {
    radio_ = new ::com::microsoft::cellsar::protobuf::Radio(*from.radio_);
  } else {
    radio_ = NULL;
  }
  ::memcpy(&engine_started_, &from.engine_started_,
    static_cast<size_t>(reinterpret_cast<char*>(&pending_smss_) -
    reinterpret_cast<char*>(&engine_started_)) + sizeof(pending_smss_));
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.StatusData)
}

void StatusData::SharedCtor() {
  ::memset(&radio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pending_smss_) -
      reinterpret_cast<char*>(&radio_)) + sizeof(pending_smss_));
  _cached_size_ = 0;
}

StatusData::~StatusData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.StatusData)
  SharedDtor();
}

void StatusData::SharedDtor() {
  if (this != internal_default_instance()) delete radio_;
}

void StatusData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StatusData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatusData& StatusData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

StatusData* StatusData::New(::google::protobuf::Arena* arena) const {
  StatusData* n = new StatusData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StatusData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscribers_.Clear();
  if (GetArenaNoVirtual() == NULL && radio_ != NULL) {
    delete radio_;
  }
  radio_ = NULL;
  ::memset(&engine_started_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pending_smss_) -
      reinterpret_cast<char*>(&engine_started_)) + sizeof(pending_smss_));
  _internal_metadata_.Clear();
}

bool StatusData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool engine_started = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &engine_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.Radio radio = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_radio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pending_smss = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pending_smss_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.microsoft.cellsar.protobuf.Subscriber subscribers = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subscribers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.StatusData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.StatusData)
  return false;
#undef DO_
}

void StatusData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool engine_started = 1;
  if (this->engine_started() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->engine_started(), output);
  }

  // .com.microsoft.cellsar.protobuf.Radio radio = 2;
  if (this->has_radio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->radio_, output);
  }

  // uint32 pending_smss = 3;
  if (this->pending_smss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->pending_smss(), output);
  }

  // repeated .com.microsoft.cellsar.protobuf.Subscriber subscribers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->subscribers(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.StatusData)
}

::google::protobuf::uint8* StatusData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool engine_started = 1;
  if (this->engine_started() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->engine_started(), target);
  }

  // .com.microsoft.cellsar.protobuf.Radio radio = 2;
  if (this->has_radio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->radio_, deterministic, target);
  }

  // uint32 pending_smss = 3;
  if (this->pending_smss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->pending_smss(), target);
  }

  // repeated .com.microsoft.cellsar.protobuf.Subscriber subscribers = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscribers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->subscribers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.StatusData)
  return target;
}

size_t StatusData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .com.microsoft.cellsar.protobuf.Subscriber subscribers = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->subscribers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscribers(static_cast<int>(i)));
    }
  }

  // .com.microsoft.cellsar.protobuf.Radio radio = 2;
  if (this->has_radio()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->radio_);
  }

  // bool engine_started = 1;
  if (this->engine_started() != 0) {
    total_size += 1 + 1;
  }

  // uint32 pending_smss = 3;
  if (this->pending_smss() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pending_smss());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StatusData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  GOOGLE_DCHECK_NE(&from, this);
  const StatusData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatusData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.StatusData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.StatusData)
    MergeFrom(*source);
  }
}

void StatusData::MergeFrom(const StatusData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribers_.MergeFrom(from.subscribers_);
  if (from.has_radio()) {
    mutable_radio()->::com::microsoft::cellsar::protobuf::Radio::MergeFrom(from.radio());
  }
  if (from.engine_started() != 0) {
    set_engine_started(from.engine_started());
  }
  if (from.pending_smss() != 0) {
    set_pending_smss(from.pending_smss());
  }
}

void StatusData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatusData::CopyFrom(const StatusData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.StatusData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatusData::IsInitialized() const {
  return true;
}

void StatusData::Swap(StatusData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatusData::InternalSwap(StatusData* other) {
  using std::swap;
  subscribers_.InternalSwap(&other->subscribers_);
  swap(radio_, other->radio_);
  swap(engine_started_, other->engine_started_);
  swap(pending_smss_, other->pending_smss_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StatusData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StatusData

// bool engine_started = 1;
void StatusData::clear_engine_started() {
  engine_started_ = false;
}
bool StatusData::engine_started() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.StatusData.engine_started)
  return engine_started_;
}
void StatusData::set_engine_started(bool value) {
  
  engine_started_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.StatusData.engine_started)
}

// .com.microsoft.cellsar.protobuf.Radio radio = 2;
bool StatusData::has_radio() const {
  return this != internal_default_instance() && radio_ != NULL;
}
void StatusData::clear_radio() {
  if (GetArenaNoVirtual() == NULL && radio_ != NULL) delete radio_;
  radio_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::Radio& StatusData::radio() const {
  const ::com::microsoft::cellsar::protobuf::Radio* p = radio_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.StatusData.radio)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::Radio*>(
      &::com::microsoft::cellsar::protobuf::_Radio_default_instance_);
}
::com::microsoft::cellsar::protobuf::Radio* StatusData::mutable_radio() {
  
  if (radio_ == NULL) {
    radio_ = new ::com::microsoft::cellsar::protobuf::Radio;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.StatusData.radio)
  return radio_;
}
::com::microsoft::cellsar::protobuf::Radio* StatusData::release_radio() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.StatusData.radio)
  
  ::com::microsoft::cellsar::protobuf::Radio* temp = radio_;
  radio_ = NULL;
  return temp;
}
void StatusData::set_allocated_radio(::com::microsoft::cellsar::protobuf::Radio* radio) {
  delete radio_;
  radio_ = radio;
  if (radio) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.StatusData.radio)
}

// uint32 pending_smss = 3;
void StatusData::clear_pending_smss() {
  pending_smss_ = 0u;
}
::google::protobuf::uint32 StatusData::pending_smss() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.StatusData.pending_smss)
  return pending_smss_;
}
void StatusData::set_pending_smss(::google::protobuf::uint32 value) {
  
  pending_smss_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.StatusData.pending_smss)
}

// repeated .com.microsoft.cellsar.protobuf.Subscriber subscribers = 4;
int StatusData::subscribers_size() const {
  return subscribers_.size();
}
void StatusData::clear_subscribers() {
  subscribers_.Clear();
}
const ::com::microsoft::cellsar::protobuf::Subscriber& StatusData::subscribers(int index) const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.StatusData.subscribers)
  return subscribers_.Get(index);
}
::com::microsoft::cellsar::protobuf::Subscriber* StatusData::mutable_subscribers(int index) {
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.StatusData.subscribers)
  return subscribers_.Mutable(index);
}
::com::microsoft::cellsar::protobuf::Subscriber* StatusData::add_subscribers() {
  // @@protoc_insertion_point(field_add:com.microsoft.cellsar.protobuf.yate.StatusData.subscribers)
  return subscribers_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::microsoft::cellsar::protobuf::Subscriber >*
StatusData::mutable_subscribers() {
  // @@protoc_insertion_point(field_mutable_list:com.microsoft.cellsar.protobuf.yate.StatusData.subscribers)
  return &subscribers_;
}
const ::google::protobuf::RepeatedPtrField< ::com::microsoft::cellsar::protobuf::Subscriber >&
StatusData::subscribers() const {
  // @@protoc_insertion_point(field_list:com.microsoft.cellsar.protobuf.yate.StatusData.subscribers)
  return subscribers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YbtsData_YbtsTimeoutData::kTimeoutForFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YbtsData_YbtsTimeoutData::YbtsData_YbtsTimeoutData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
}
YbtsData_YbtsTimeoutData::YbtsData_YbtsTimeoutData(const YbtsData_YbtsTimeoutData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeout_for_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.timeout_for().size() > 0) {
    timeout_for_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timeout_for_);
  }
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
}

void YbtsData_YbtsTimeoutData::SharedCtor() {
  timeout_for_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

YbtsData_YbtsTimeoutData::~YbtsData_YbtsTimeoutData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  SharedDtor();
}

void YbtsData_YbtsTimeoutData::SharedDtor() {
  timeout_for_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YbtsData_YbtsTimeoutData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YbtsData_YbtsTimeoutData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YbtsData_YbtsTimeoutData& YbtsData_YbtsTimeoutData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

YbtsData_YbtsTimeoutData* YbtsData_YbtsTimeoutData::New(::google::protobuf::Arena* arena) const {
  YbtsData_YbtsTimeoutData* n = new YbtsData_YbtsTimeoutData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YbtsData_YbtsTimeoutData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeout_for_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool YbtsData_YbtsTimeoutData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string timeout_for = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timeout_for()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->timeout_for().data(), static_cast<int>(this->timeout_for().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  return false;
#undef DO_
}

void YbtsData_YbtsTimeoutData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string timeout_for = 1;
  if (this->timeout_for().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timeout_for().data(), static_cast<int>(this->timeout_for().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->timeout_for(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
}

::google::protobuf::uint8* YbtsData_YbtsTimeoutData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string timeout_for = 1;
  if (this->timeout_for().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->timeout_for().data(), static_cast<int>(this->timeout_for().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->timeout_for(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  return target;
}

size_t YbtsData_YbtsTimeoutData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string timeout_for = 1;
  if (this->timeout_for().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->timeout_for());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YbtsData_YbtsTimeoutData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  GOOGLE_DCHECK_NE(&from, this);
  const YbtsData_YbtsTimeoutData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YbtsData_YbtsTimeoutData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
    MergeFrom(*source);
  }
}

void YbtsData_YbtsTimeoutData::MergeFrom(const YbtsData_YbtsTimeoutData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeout_for().size() > 0) {

    timeout_for_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.timeout_for_);
  }
}

void YbtsData_YbtsTimeoutData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YbtsData_YbtsTimeoutData::CopyFrom(const YbtsData_YbtsTimeoutData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YbtsData_YbtsTimeoutData::IsInitialized() const {
  return true;
}

void YbtsData_YbtsTimeoutData::Swap(YbtsData_YbtsTimeoutData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YbtsData_YbtsTimeoutData::InternalSwap(YbtsData_YbtsTimeoutData* other) {
  using std::swap;
  timeout_for_.Swap(&other->timeout_for_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YbtsData_YbtsTimeoutData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YbtsData_YbtsTimeoutData

// string timeout_for = 1;
void YbtsData_YbtsTimeoutData::clear_timeout_for() {
  timeout_for_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YbtsData_YbtsTimeoutData::timeout_for() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
  return timeout_for_.GetNoArena();
}
void YbtsData_YbtsTimeoutData::set_timeout_for(const ::std::string& value) {
  
  timeout_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
}
#if LANG_CXX11
void YbtsData_YbtsTimeoutData::set_timeout_for(::std::string&& value) {
  
  timeout_for_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
}
#endif
void YbtsData_YbtsTimeoutData::set_timeout_for(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  timeout_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
}
void YbtsData_YbtsTimeoutData::set_timeout_for(const char* value, size_t size) {
  
  timeout_for_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
}
::std::string* YbtsData_YbtsTimeoutData::mutable_timeout_for() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
  return timeout_for_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YbtsData_YbtsTimeoutData::release_timeout_for() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
  
  return timeout_for_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YbtsData_YbtsTimeoutData::set_allocated_timeout_for(::std::string* timeout_for) {
  if (timeout_for != NULL) {
    
  } else {
    
  }
  timeout_for_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timeout_for);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData.timeout_for)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YbtsData_YbtsStopnotificationData::kRestartingFieldNumber;
const int YbtsData_YbtsStopnotificationData::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YbtsData_YbtsStopnotificationData::YbtsData_YbtsStopnotificationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
}
YbtsData_YbtsStopnotificationData::YbtsData_YbtsStopnotificationData(const YbtsData_YbtsStopnotificationData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  restarting_ = from.restarting_;
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
}

void YbtsData_YbtsStopnotificationData::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  restarting_ = false;
  _cached_size_ = 0;
}

YbtsData_YbtsStopnotificationData::~YbtsData_YbtsStopnotificationData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  SharedDtor();
}

void YbtsData_YbtsStopnotificationData::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void YbtsData_YbtsStopnotificationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YbtsData_YbtsStopnotificationData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YbtsData_YbtsStopnotificationData& YbtsData_YbtsStopnotificationData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

YbtsData_YbtsStopnotificationData* YbtsData_YbtsStopnotificationData::New(::google::protobuf::Arena* arena) const {
  YbtsData_YbtsStopnotificationData* n = new YbtsData_YbtsStopnotificationData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YbtsData_YbtsStopnotificationData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  restarting_ = false;
  _internal_metadata_.Clear();
}

bool YbtsData_YbtsStopnotificationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool restarting = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &restarting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  return false;
#undef DO_
}

void YbtsData_YbtsStopnotificationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool restarting = 1;
  if (this->restarting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->restarting(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
}

::google::protobuf::uint8* YbtsData_YbtsStopnotificationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool restarting = 1;
  if (this->restarting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->restarting(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  return target;
}

size_t YbtsData_YbtsStopnotificationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // bool restarting = 1;
  if (this->restarting() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YbtsData_YbtsStopnotificationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  GOOGLE_DCHECK_NE(&from, this);
  const YbtsData_YbtsStopnotificationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YbtsData_YbtsStopnotificationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
    MergeFrom(*source);
  }
}

void YbtsData_YbtsStopnotificationData::MergeFrom(const YbtsData_YbtsStopnotificationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.restarting() != 0) {
    set_restarting(from.restarting());
  }
}

void YbtsData_YbtsStopnotificationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YbtsData_YbtsStopnotificationData::CopyFrom(const YbtsData_YbtsStopnotificationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YbtsData_YbtsStopnotificationData::IsInitialized() const {
  return true;
}

void YbtsData_YbtsStopnotificationData::Swap(YbtsData_YbtsStopnotificationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YbtsData_YbtsStopnotificationData::InternalSwap(YbtsData_YbtsStopnotificationData* other) {
  using std::swap;
  reason_.Swap(&other->reason_);
  swap(restarting_, other->restarting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YbtsData_YbtsStopnotificationData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YbtsData_YbtsStopnotificationData

// bool restarting = 1;
void YbtsData_YbtsStopnotificationData::clear_restarting() {
  restarting_ = false;
}
bool YbtsData_YbtsStopnotificationData::restarting() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.restarting)
  return restarting_;
}
void YbtsData_YbtsStopnotificationData::set_restarting(bool value) {
  
  restarting_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.restarting)
}

// string reason = 2;
void YbtsData_YbtsStopnotificationData::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YbtsData_YbtsStopnotificationData::reason() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
  return reason_.GetNoArena();
}
void YbtsData_YbtsStopnotificationData::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
}
#if LANG_CXX11
void YbtsData_YbtsStopnotificationData::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
}
#endif
void YbtsData_YbtsStopnotificationData::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
}
void YbtsData_YbtsStopnotificationData::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
}
::std::string* YbtsData_YbtsStopnotificationData::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YbtsData_YbtsStopnotificationData::release_reason() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YbtsData_YbtsStopnotificationData::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YbtsData::kTypeFieldNumber;
const int YbtsData::kYbtsTimeoutDataFieldNumber;
const int YbtsData::kYbtsStopnotificationDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YbtsData::YbtsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.YbtsData)
}
YbtsData::YbtsData(const YbtsData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_ybts_timeout_data()) {
    ybts_timeout_data_ = new ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData(*from.ybts_timeout_data_);
  } else {
    ybts_timeout_data_ = NULL;
  }
  if (from.has_ybts_stopnotification_data()) {
    ybts_stopnotification_data_ = new ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData(*from.ybts_stopnotification_data_);
  } else {
    ybts_stopnotification_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.YbtsData)
}

void YbtsData::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ybts_timeout_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ybts_stopnotification_data_) -
      reinterpret_cast<char*>(&ybts_timeout_data_)) + sizeof(ybts_stopnotification_data_));
  _cached_size_ = 0;
}

YbtsData::~YbtsData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.YbtsData)
  SharedDtor();
}

void YbtsData::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ybts_timeout_data_;
  if (this != internal_default_instance()) delete ybts_stopnotification_data_;
}

void YbtsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YbtsData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YbtsData& YbtsData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

YbtsData* YbtsData::New(::google::protobuf::Arena* arena) const {
  YbtsData* n = new YbtsData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YbtsData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ybts_timeout_data_ != NULL) {
    delete ybts_timeout_data_;
  }
  ybts_timeout_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && ybts_stopnotification_data_ != NULL) {
    delete ybts_stopnotification_data_;
  }
  ybts_stopnotification_data_ = NULL;
  _internal_metadata_.Clear();
}

bool YbtsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.YbtsData.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData ybts_timeout_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ybts_timeout_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData ybts_stopnotification_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ybts_stopnotification_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.YbtsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.YbtsData)
  return false;
#undef DO_
}

void YbtsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YbtsData.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData ybts_timeout_data = 2;
  if (this->has_ybts_timeout_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ybts_timeout_data_, output);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData ybts_stopnotification_data = 3;
  if (this->has_ybts_stopnotification_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ybts_stopnotification_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.YbtsData)
}

::google::protobuf::uint8* YbtsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YbtsData.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData ybts_timeout_data = 2;
  if (this->has_ybts_timeout_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ybts_timeout_data_, deterministic, target);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData ybts_stopnotification_data = 3;
  if (this->has_ybts_stopnotification_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ybts_stopnotification_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.YbtsData)
  return target;
}

size_t YbtsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData ybts_timeout_data = 2;
  if (this->has_ybts_timeout_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ybts_timeout_data_);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData ybts_stopnotification_data = 3;
  if (this->has_ybts_stopnotification_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ybts_stopnotification_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YbtsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  GOOGLE_DCHECK_NE(&from, this);
  const YbtsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YbtsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.YbtsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.YbtsData)
    MergeFrom(*source);
  }
}

void YbtsData::MergeFrom(const YbtsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_ybts_timeout_data()) {
    mutable_ybts_timeout_data()->::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData::MergeFrom(from.ybts_timeout_data());
  }
  if (from.has_ybts_stopnotification_data()) {
    mutable_ybts_stopnotification_data()->::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData::MergeFrom(from.ybts_stopnotification_data());
  }
}

void YbtsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YbtsData::CopyFrom(const YbtsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.YbtsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YbtsData::IsInitialized() const {
  return true;
}

void YbtsData::Swap(YbtsData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YbtsData::InternalSwap(YbtsData* other) {
  using std::swap;
  type_.Swap(&other->type_);
  swap(ybts_timeout_data_, other->ybts_timeout_data_);
  swap(ybts_stopnotification_data_, other->ybts_stopnotification_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YbtsData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YbtsData

// string type = 1;
void YbtsData::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YbtsData::type() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
  return type_.GetNoArena();
}
void YbtsData::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
}
#if LANG_CXX11
void YbtsData::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
}
#endif
void YbtsData::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
}
void YbtsData::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
}
::std::string* YbtsData::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YbtsData::release_type() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YbtsData::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YbtsData.type)
}

// .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsTimeoutData ybts_timeout_data = 2;
bool YbtsData::has_ybts_timeout_data() const {
  return this != internal_default_instance() && ybts_timeout_data_ != NULL;
}
void YbtsData::clear_ybts_timeout_data() {
  if (GetArenaNoVirtual() == NULL && ybts_timeout_data_ != NULL) delete ybts_timeout_data_;
  ybts_timeout_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData& YbtsData::ybts_timeout_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData* p = ybts_timeout_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_timeout_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData*>(
      &::com::microsoft::cellsar::protobuf::yate::_YbtsData_YbtsTimeoutData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData* YbtsData::mutable_ybts_timeout_data() {
  
  if (ybts_timeout_data_ == NULL) {
    ybts_timeout_data_ = new ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_timeout_data)
  return ybts_timeout_data_;
}
::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData* YbtsData::release_ybts_timeout_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_timeout_data)
  
  ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData* temp = ybts_timeout_data_;
  ybts_timeout_data_ = NULL;
  return temp;
}
void YbtsData::set_allocated_ybts_timeout_data(::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsTimeoutData* ybts_timeout_data) {
  delete ybts_timeout_data_;
  ybts_timeout_data_ = ybts_timeout_data;
  if (ybts_timeout_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_timeout_data)
}

// .com.microsoft.cellsar.protobuf.yate.YbtsData.YbtsStopnotificationData ybts_stopnotification_data = 3;
bool YbtsData::has_ybts_stopnotification_data() const {
  return this != internal_default_instance() && ybts_stopnotification_data_ != NULL;
}
void YbtsData::clear_ybts_stopnotification_data() {
  if (GetArenaNoVirtual() == NULL && ybts_stopnotification_data_ != NULL) delete ybts_stopnotification_data_;
  ybts_stopnotification_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData& YbtsData::ybts_stopnotification_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData* p = ybts_stopnotification_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_stopnotification_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData*>(
      &::com::microsoft::cellsar::protobuf::yate::_YbtsData_YbtsStopnotificationData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData* YbtsData::mutable_ybts_stopnotification_data() {
  
  if (ybts_stopnotification_data_ == NULL) {
    ybts_stopnotification_data_ = new ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_stopnotification_data)
  return ybts_stopnotification_data_;
}
::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData* YbtsData::release_ybts_stopnotification_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_stopnotification_data)
  
  ::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData* temp = ybts_stopnotification_data_;
  ybts_stopnotification_data_ = NULL;
  return temp;
}
void YbtsData::set_allocated_ybts_stopnotification_data(::com::microsoft::cellsar::protobuf::yate::YbtsData_YbtsStopnotificationData* ybts_stopnotification_data) {
  delete ybts_stopnotification_data_;
  ybts_stopnotification_data_ = ybts_stopnotification_data;
  if (ybts_stopnotification_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YbtsData.ybts_stopnotification_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmsData::kSubscriberFieldNumber;
const int SmsData::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmsData::SmsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.SmsData)
}
SmsData::SmsData(const SmsData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_subscriber()) {
    subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber(*from.subscriber_);
  } else {
    subscriber_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.SmsData)
}

void SmsData::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscriber_ = NULL;
  _cached_size_ = 0;
}

SmsData::~SmsData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.SmsData)
  SharedDtor();
}

void SmsData::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete subscriber_;
}

void SmsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SmsData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SmsData& SmsData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

SmsData* SmsData::New(::google::protobuf::Arena* arena) const {
  SmsData* n = new SmsData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SmsData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && subscriber_ != NULL) {
    delete subscriber_;
  }
  subscriber_ = NULL;
  _internal_metadata_.Clear();
}

bool SmsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subscriber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.SmsData.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.SmsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.SmsData)
  return false;
#undef DO_
}

void SmsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
  if (this->has_subscriber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->subscriber_, output);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsData.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.SmsData)
}

::google::protobuf::uint8* SmsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
  if (this->has_subscriber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->subscriber_, deterministic, target);
  }

  // string msg = 2;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsData.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.SmsData)
  return target;
}

size_t SmsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 2;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
  if (this->has_subscriber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subscriber_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  GOOGLE_DCHECK_NE(&from, this);
  const SmsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SmsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.SmsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.SmsData)
    MergeFrom(*source);
  }
}

void SmsData::MergeFrom(const SmsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_subscriber()) {
    mutable_subscriber()->::com::microsoft::cellsar::protobuf::Subscriber::MergeFrom(from.subscriber());
  }
}

void SmsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmsData::CopyFrom(const SmsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.SmsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmsData::IsInitialized() const {
  return true;
}

void SmsData::Swap(SmsData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmsData::InternalSwap(SmsData* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  swap(subscriber_, other->subscriber_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SmsData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SmsData

// .com.microsoft.cellsar.protobuf.Subscriber subscriber = 1;
bool SmsData::has_subscriber() const {
  return this != internal_default_instance() && subscriber_ != NULL;
}
void SmsData::clear_subscriber() {
  if (GetArenaNoVirtual() == NULL && subscriber_ != NULL) delete subscriber_;
  subscriber_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::Subscriber& SmsData::subscriber() const {
  const ::com::microsoft::cellsar::protobuf::Subscriber* p = subscriber_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsData.subscriber)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::Subscriber*>(
      &::com::microsoft::cellsar::protobuf::_Subscriber_default_instance_);
}
::com::microsoft::cellsar::protobuf::Subscriber* SmsData::mutable_subscriber() {
  
  if (subscriber_ == NULL) {
    subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsData.subscriber)
  return subscriber_;
}
::com::microsoft::cellsar::protobuf::Subscriber* SmsData::release_subscriber() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsData.subscriber)
  
  ::com::microsoft::cellsar::protobuf::Subscriber* temp = subscriber_;
  subscriber_ = NULL;
  return temp;
}
void SmsData::set_allocated_subscriber(::com::microsoft::cellsar::protobuf::Subscriber* subscriber) {
  delete subscriber_;
  subscriber_ = subscriber;
  if (subscriber) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsData.subscriber)
}

// string msg = 2;
void SmsData::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SmsData::msg() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
  return msg_.GetNoArena();
}
void SmsData::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
}
#if LANG_CXX11
void SmsData::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
}
#endif
void SmsData::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
}
void SmsData::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
}
::std::string* SmsData::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SmsData::release_msg() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SmsData::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsData.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SmsFailedData::kToSubscriberFieldNumber;
const int SmsFailedData::kErrorFieldNumber;
const int SmsFailedData::kReasonFieldNumber;
const int SmsFailedData::kSilentFieldNumber;
const int SmsFailedData::kSilentSmsCountFieldNumber;
const int SmsFailedData::kFromSubscriberFieldNumber;
const int SmsFailedData::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SmsFailedData::SmsFailedData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
}
SmsFailedData::SmsFailedData(const SmsFailedData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_to_subscriber()) {
    to_subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber(*from.to_subscriber_);
  } else {
    to_subscriber_ = NULL;
  }
  if (from.has_from_subscriber()) {
    from_subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber(*from.from_subscriber_);
  } else {
    from_subscriber_ = NULL;
  }
  ::memcpy(&silent_sms_count_, &from.silent_sms_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&silent_) -
    reinterpret_cast<char*>(&silent_sms_count_)) + sizeof(silent_));
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
}

void SmsFailedData::SharedCtor() {
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&to_subscriber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&silent_) -
      reinterpret_cast<char*>(&to_subscriber_)) + sizeof(silent_));
  _cached_size_ = 0;
}

SmsFailedData::~SmsFailedData() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  SharedDtor();
}

void SmsFailedData::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete to_subscriber_;
  if (this != internal_default_instance()) delete from_subscriber_;
}

void SmsFailedData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SmsFailedData::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SmsFailedData& SmsFailedData::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

SmsFailedData* SmsFailedData::New(::google::protobuf::Arena* arena) const {
  SmsFailedData* n = new SmsFailedData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SmsFailedData::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && to_subscriber_ != NULL) {
    delete to_subscriber_;
  }
  to_subscriber_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_subscriber_ != NULL) {
    delete from_subscriber_;
  }
  from_subscriber_ = NULL;
  ::memset(&silent_sms_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&silent_) -
      reinterpret_cast<char*>(&silent_sms_count_)) + sizeof(silent_));
  _internal_metadata_.Clear();
}

bool SmsFailedData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.microsoft.cellsar.protobuf.Subscriber to_subscriber = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_to_subscriber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.SmsFailedData.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool silent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &silent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 silent_sms_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &silent_sms_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.Subscriber from_subscriber = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_from_subscriber()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  return false;
#undef DO_
}

void SmsFailedData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.microsoft.cellsar.protobuf.Subscriber to_subscriber = 1;
  if (this->has_to_subscriber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->to_subscriber_, output);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsFailedData.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  // string reason = 3;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->reason(), output);
  }

  // bool silent = 4;
  if (this->silent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->silent(), output);
  }

  // uint64 silent_sms_count = 5;
  if (this->silent_sms_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->silent_sms_count(), output);
  }

  // .com.microsoft.cellsar.protobuf.Subscriber from_subscriber = 6;
  if (this->has_from_subscriber()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->from_subscriber_, output);
  }

  // string msg = 7;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
}

::google::protobuf::uint8* SmsFailedData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.microsoft.cellsar.protobuf.Subscriber to_subscriber = 1;
  if (this->has_to_subscriber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->to_subscriber_, deterministic, target);
  }

  // string error = 2;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsFailedData.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  // string reason = 3;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->reason(), target);
  }

  // bool silent = 4;
  if (this->silent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->silent(), target);
  }

  // uint64 silent_sms_count = 5;
  if (this->silent_sms_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->silent_sms_count(), target);
  }

  // .com.microsoft.cellsar.protobuf.Subscriber from_subscriber = 6;
  if (this->has_from_subscriber()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->from_subscriber_, deterministic, target);
  }

  // string msg = 7;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  return target;
}

size_t SmsFailedData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string error = 2;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // string reason = 3;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // string msg = 7;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // .com.microsoft.cellsar.protobuf.Subscriber to_subscriber = 1;
  if (this->has_to_subscriber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->to_subscriber_);
  }

  // .com.microsoft.cellsar.protobuf.Subscriber from_subscriber = 6;
  if (this->has_from_subscriber()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->from_subscriber_);
  }

  // uint64 silent_sms_count = 5;
  if (this->silent_sms_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->silent_sms_count());
  }

  // bool silent = 4;
  if (this->silent() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SmsFailedData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  GOOGLE_DCHECK_NE(&from, this);
  const SmsFailedData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SmsFailedData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
    MergeFrom(*source);
  }
}

void SmsFailedData::MergeFrom(const SmsFailedData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.has_to_subscriber()) {
    mutable_to_subscriber()->::com::microsoft::cellsar::protobuf::Subscriber::MergeFrom(from.to_subscriber());
  }
  if (from.has_from_subscriber()) {
    mutable_from_subscriber()->::com::microsoft::cellsar::protobuf::Subscriber::MergeFrom(from.from_subscriber());
  }
  if (from.silent_sms_count() != 0) {
    set_silent_sms_count(from.silent_sms_count());
  }
  if (from.silent() != 0) {
    set_silent(from.silent());
  }
}

void SmsFailedData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SmsFailedData::CopyFrom(const SmsFailedData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.SmsFailedData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SmsFailedData::IsInitialized() const {
  return true;
}

void SmsFailedData::Swap(SmsFailedData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SmsFailedData::InternalSwap(SmsFailedData* other) {
  using std::swap;
  error_.Swap(&other->error_);
  reason_.Swap(&other->reason_);
  msg_.Swap(&other->msg_);
  swap(to_subscriber_, other->to_subscriber_);
  swap(from_subscriber_, other->from_subscriber_);
  swap(silent_sms_count_, other->silent_sms_count_);
  swap(silent_, other->silent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SmsFailedData::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SmsFailedData

// .com.microsoft.cellsar.protobuf.Subscriber to_subscriber = 1;
bool SmsFailedData::has_to_subscriber() const {
  return this != internal_default_instance() && to_subscriber_ != NULL;
}
void SmsFailedData::clear_to_subscriber() {
  if (GetArenaNoVirtual() == NULL && to_subscriber_ != NULL) delete to_subscriber_;
  to_subscriber_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::Subscriber& SmsFailedData::to_subscriber() const {
  const ::com::microsoft::cellsar::protobuf::Subscriber* p = to_subscriber_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.to_subscriber)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::Subscriber*>(
      &::com::microsoft::cellsar::protobuf::_Subscriber_default_instance_);
}
::com::microsoft::cellsar::protobuf::Subscriber* SmsFailedData::mutable_to_subscriber() {
  
  if (to_subscriber_ == NULL) {
    to_subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsFailedData.to_subscriber)
  return to_subscriber_;
}
::com::microsoft::cellsar::protobuf::Subscriber* SmsFailedData::release_to_subscriber() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsFailedData.to_subscriber)
  
  ::com::microsoft::cellsar::protobuf::Subscriber* temp = to_subscriber_;
  to_subscriber_ = NULL;
  return temp;
}
void SmsFailedData::set_allocated_to_subscriber(::com::microsoft::cellsar::protobuf::Subscriber* to_subscriber) {
  delete to_subscriber_;
  to_subscriber_ = to_subscriber;
  if (to_subscriber) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsFailedData.to_subscriber)
}

// string error = 2;
void SmsFailedData::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SmsFailedData::error() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
  return error_.GetNoArena();
}
void SmsFailedData::set_error(const ::std::string& value) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
}
#if LANG_CXX11
void SmsFailedData::set_error(::std::string&& value) {
  
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
}
#endif
void SmsFailedData::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
}
void SmsFailedData::set_error(const char* value, size_t size) {
  
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
}
::std::string* SmsFailedData::mutable_error() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SmsFailedData::release_error() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
  
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SmsFailedData::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    
  } else {
    
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsFailedData.error)
}

// string reason = 3;
void SmsFailedData::clear_reason() {
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SmsFailedData::reason() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
  return reason_.GetNoArena();
}
void SmsFailedData::set_reason(const ::std::string& value) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
}
#if LANG_CXX11
void SmsFailedData::set_reason(::std::string&& value) {
  
  reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
}
#endif
void SmsFailedData::set_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
}
void SmsFailedData::set_reason(const char* value, size_t size) {
  
  reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
}
::std::string* SmsFailedData::mutable_reason() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
  return reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SmsFailedData::release_reason() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
  
  return reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SmsFailedData::set_allocated_reason(::std::string* reason) {
  if (reason != NULL) {
    
  } else {
    
  }
  reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reason);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsFailedData.reason)
}

// bool silent = 4;
void SmsFailedData::clear_silent() {
  silent_ = false;
}
bool SmsFailedData::silent() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.silent)
  return silent_;
}
void SmsFailedData::set_silent(bool value) {
  
  silent_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.SmsFailedData.silent)
}

// uint64 silent_sms_count = 5;
void SmsFailedData::clear_silent_sms_count() {
  silent_sms_count_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 SmsFailedData::silent_sms_count() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.silent_sms_count)
  return silent_sms_count_;
}
void SmsFailedData::set_silent_sms_count(::google::protobuf::uint64 value) {
  
  silent_sms_count_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.SmsFailedData.silent_sms_count)
}

// .com.microsoft.cellsar.protobuf.Subscriber from_subscriber = 6;
bool SmsFailedData::has_from_subscriber() const {
  return this != internal_default_instance() && from_subscriber_ != NULL;
}
void SmsFailedData::clear_from_subscriber() {
  if (GetArenaNoVirtual() == NULL && from_subscriber_ != NULL) delete from_subscriber_;
  from_subscriber_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::Subscriber& SmsFailedData::from_subscriber() const {
  const ::com::microsoft::cellsar::protobuf::Subscriber* p = from_subscriber_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.from_subscriber)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::Subscriber*>(
      &::com::microsoft::cellsar::protobuf::_Subscriber_default_instance_);
}
::com::microsoft::cellsar::protobuf::Subscriber* SmsFailedData::mutable_from_subscriber() {
  
  if (from_subscriber_ == NULL) {
    from_subscriber_ = new ::com::microsoft::cellsar::protobuf::Subscriber;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsFailedData.from_subscriber)
  return from_subscriber_;
}
::com::microsoft::cellsar::protobuf::Subscriber* SmsFailedData::release_from_subscriber() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsFailedData.from_subscriber)
  
  ::com::microsoft::cellsar::protobuf::Subscriber* temp = from_subscriber_;
  from_subscriber_ = NULL;
  return temp;
}
void SmsFailedData::set_allocated_from_subscriber(::com::microsoft::cellsar::protobuf::Subscriber* from_subscriber) {
  delete from_subscriber_;
  from_subscriber_ = from_subscriber;
  if (from_subscriber) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsFailedData.from_subscriber)
}

// string msg = 7;
void SmsFailedData::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SmsFailedData::msg() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
  return msg_.GetNoArena();
}
void SmsFailedData::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
}
#if LANG_CXX11
void SmsFailedData::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
}
#endif
void SmsFailedData::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
}
void SmsFailedData::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
}
::std::string* SmsFailedData::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SmsFailedData::release_msg() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SmsFailedData::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.SmsFailedData.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int YateMessage::kTypeFieldNumber;
const int YateMessage::kTimeFieldNumber;
const int YateMessage::kPhyDataFieldNumber;
const int YateMessage::kStatusDataFieldNumber;
const int YateMessage::kYbtsDataFieldNumber;
const int YateMessage::kSmsDataFieldNumber;
const int YateMessage::kSmsFailedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

YateMessage::YateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_from_5fyate_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.yate.YateMessage)
}
YateMessage::YateMessage(const YateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_phy_data()) {
    phy_data_ = new ::com::microsoft::cellsar::protobuf::yate::PhyData(*from.phy_data_);
  } else {
    phy_data_ = NULL;
  }
  if (from.has_status_data()) {
    status_data_ = new ::com::microsoft::cellsar::protobuf::yate::StatusData(*from.status_data_);
  } else {
    status_data_ = NULL;
  }
  if (from.has_ybts_data()) {
    ybts_data_ = new ::com::microsoft::cellsar::protobuf::yate::YbtsData(*from.ybts_data_);
  } else {
    ybts_data_ = NULL;
  }
  if (from.has_sms_data()) {
    sms_data_ = new ::com::microsoft::cellsar::protobuf::yate::SmsData(*from.sms_data_);
  } else {
    sms_data_ = NULL;
  }
  if (from.has_sms_failed_data()) {
    sms_failed_data_ = new ::com::microsoft::cellsar::protobuf::yate::SmsFailedData(*from.sms_failed_data_);
  } else {
    sms_failed_data_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.yate.YateMessage)
}

void YateMessage::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&phy_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&phy_data_)) + sizeof(time_));
  _cached_size_ = 0;
}

YateMessage::~YateMessage() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.yate.YateMessage)
  SharedDtor();
}

void YateMessage::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete phy_data_;
  if (this != internal_default_instance()) delete status_data_;
  if (this != internal_default_instance()) delete ybts_data_;
  if (this != internal_default_instance()) delete sms_data_;
  if (this != internal_default_instance()) delete sms_failed_data_;
}

void YateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YateMessage::descriptor() {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const YateMessage& YateMessage::default_instance() {
  protobuf_from_5fyate_2eproto::InitDefaults();
  return *internal_default_instance();
}

YateMessage* YateMessage::New(::google::protobuf::Arena* arena) const {
  YateMessage* n = new YateMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void YateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && phy_data_ != NULL) {
    delete phy_data_;
  }
  phy_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_data_ != NULL) {
    delete status_data_;
  }
  status_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && ybts_data_ != NULL) {
    delete ybts_data_;
  }
  ybts_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && sms_data_ != NULL) {
    delete sms_data_;
  }
  sms_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && sms_failed_data_ != NULL) {
    delete sms_failed_data_;
  }
  sms_failed_data_ = NULL;
  time_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool YateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.yate.YateMessage.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.PhyData phy_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_phy_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.StatusData status_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_status_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.YbtsData ybts_data = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ybts_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.SmsData sms_data = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sms_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .com.microsoft.cellsar.protobuf.yate.SmsFailedData sms_failed_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sms_failed_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.yate.YateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.yate.YateMessage)
  return false;
#undef DO_
}

void YateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YateMessage.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->time(), output);
  }

  // .com.microsoft.cellsar.protobuf.yate.PhyData phy_data = 3;
  if (this->has_phy_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->phy_data_, output);
  }

  // .com.microsoft.cellsar.protobuf.yate.StatusData status_data = 4;
  if (this->has_status_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->status_data_, output);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData ybts_data = 5;
  if (this->has_ybts_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->ybts_data_, output);
  }

  // .com.microsoft.cellsar.protobuf.yate.SmsData sms_data = 6;
  if (this->has_sms_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->sms_data_, output);
  }

  // .com.microsoft.cellsar.protobuf.yate.SmsFailedData sms_failed_data = 7;
  if (this->has_sms_failed_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->sms_failed_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.yate.YateMessage)
}

::google::protobuf::uint8* YateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.yate.YateMessage.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->time(), target);
  }

  // .com.microsoft.cellsar.protobuf.yate.PhyData phy_data = 3;
  if (this->has_phy_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->phy_data_, deterministic, target);
  }

  // .com.microsoft.cellsar.protobuf.yate.StatusData status_data = 4;
  if (this->has_status_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->status_data_, deterministic, target);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData ybts_data = 5;
  if (this->has_ybts_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->ybts_data_, deterministic, target);
  }

  // .com.microsoft.cellsar.protobuf.yate.SmsData sms_data = 6;
  if (this->has_sms_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->sms_data_, deterministic, target);
  }

  // .com.microsoft.cellsar.protobuf.yate.SmsFailedData sms_failed_data = 7;
  if (this->has_sms_failed_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->sms_failed_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.yate.YateMessage)
  return target;
}

size_t YateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // .com.microsoft.cellsar.protobuf.yate.PhyData phy_data = 3;
  if (this->has_phy_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->phy_data_);
  }

  // .com.microsoft.cellsar.protobuf.yate.StatusData status_data = 4;
  if (this->has_status_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->status_data_);
  }

  // .com.microsoft.cellsar.protobuf.yate.YbtsData ybts_data = 5;
  if (this->has_ybts_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ybts_data_);
  }

  // .com.microsoft.cellsar.protobuf.yate.SmsData sms_data = 6;
  if (this->has_sms_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sms_data_);
  }

  // .com.microsoft.cellsar.protobuf.yate.SmsFailedData sms_failed_data = 7;
  if (this->has_sms_failed_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sms_failed_data_);
  }

  // uint64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const YateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const YateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.yate.YateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.yate.YateMessage)
    MergeFrom(*source);
  }
}

void YateMessage::MergeFrom(const YateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.has_phy_data()) {
    mutable_phy_data()->::com::microsoft::cellsar::protobuf::yate::PhyData::MergeFrom(from.phy_data());
  }
  if (from.has_status_data()) {
    mutable_status_data()->::com::microsoft::cellsar::protobuf::yate::StatusData::MergeFrom(from.status_data());
  }
  if (from.has_ybts_data()) {
    mutable_ybts_data()->::com::microsoft::cellsar::protobuf::yate::YbtsData::MergeFrom(from.ybts_data());
  }
  if (from.has_sms_data()) {
    mutable_sms_data()->::com::microsoft::cellsar::protobuf::yate::SmsData::MergeFrom(from.sms_data());
  }
  if (from.has_sms_failed_data()) {
    mutable_sms_failed_data()->::com::microsoft::cellsar::protobuf::yate::SmsFailedData::MergeFrom(from.sms_failed_data());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void YateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YateMessage::CopyFrom(const YateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.yate.YateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YateMessage::IsInitialized() const {
  return true;
}

void YateMessage::Swap(YateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void YateMessage::InternalSwap(YateMessage* other) {
  using std::swap;
  type_.Swap(&other->type_);
  swap(phy_data_, other->phy_data_);
  swap(status_data_, other->status_data_);
  swap(ybts_data_, other->ybts_data_);
  swap(sms_data_, other->sms_data_);
  swap(sms_failed_data_, other->sms_failed_data_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata YateMessage::GetMetadata() const {
  protobuf_from_5fyate_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_from_5fyate_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// YateMessage

// string type = 1;
void YateMessage::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& YateMessage::type() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
  return type_.GetNoArena();
}
void YateMessage::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
}
#if LANG_CXX11
void YateMessage::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
}
#endif
void YateMessage::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
}
void YateMessage::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
}
::std::string* YateMessage::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* YateMessage::release_type() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void YateMessage::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YateMessage.type)
}

// uint64 time = 2;
void YateMessage::clear_time() {
  time_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 YateMessage::time() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.time)
  return time_;
}
void YateMessage::set_time(::google::protobuf::uint64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.yate.YateMessage.time)
}

// .com.microsoft.cellsar.protobuf.yate.PhyData phy_data = 3;
bool YateMessage::has_phy_data() const {
  return this != internal_default_instance() && phy_data_ != NULL;
}
void YateMessage::clear_phy_data() {
  if (GetArenaNoVirtual() == NULL && phy_data_ != NULL) delete phy_data_;
  phy_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::PhyData& YateMessage::phy_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::PhyData* p = phy_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.phy_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::PhyData*>(
      &::com::microsoft::cellsar::protobuf::yate::_PhyData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::PhyData* YateMessage::mutable_phy_data() {
  
  if (phy_data_ == NULL) {
    phy_data_ = new ::com::microsoft::cellsar::protobuf::yate::PhyData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YateMessage.phy_data)
  return phy_data_;
}
::com::microsoft::cellsar::protobuf::yate::PhyData* YateMessage::release_phy_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YateMessage.phy_data)
  
  ::com::microsoft::cellsar::protobuf::yate::PhyData* temp = phy_data_;
  phy_data_ = NULL;
  return temp;
}
void YateMessage::set_allocated_phy_data(::com::microsoft::cellsar::protobuf::yate::PhyData* phy_data) {
  delete phy_data_;
  phy_data_ = phy_data;
  if (phy_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YateMessage.phy_data)
}

// .com.microsoft.cellsar.protobuf.yate.StatusData status_data = 4;
bool YateMessage::has_status_data() const {
  return this != internal_default_instance() && status_data_ != NULL;
}
void YateMessage::clear_status_data() {
  if (GetArenaNoVirtual() == NULL && status_data_ != NULL) delete status_data_;
  status_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::StatusData& YateMessage::status_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::StatusData* p = status_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.status_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::StatusData*>(
      &::com::microsoft::cellsar::protobuf::yate::_StatusData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::StatusData* YateMessage::mutable_status_data() {
  
  if (status_data_ == NULL) {
    status_data_ = new ::com::microsoft::cellsar::protobuf::yate::StatusData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YateMessage.status_data)
  return status_data_;
}
::com::microsoft::cellsar::protobuf::yate::StatusData* YateMessage::release_status_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YateMessage.status_data)
  
  ::com::microsoft::cellsar::protobuf::yate::StatusData* temp = status_data_;
  status_data_ = NULL;
  return temp;
}
void YateMessage::set_allocated_status_data(::com::microsoft::cellsar::protobuf::yate::StatusData* status_data) {
  delete status_data_;
  status_data_ = status_data;
  if (status_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YateMessage.status_data)
}

// .com.microsoft.cellsar.protobuf.yate.YbtsData ybts_data = 5;
bool YateMessage::has_ybts_data() const {
  return this != internal_default_instance() && ybts_data_ != NULL;
}
void YateMessage::clear_ybts_data() {
  if (GetArenaNoVirtual() == NULL && ybts_data_ != NULL) delete ybts_data_;
  ybts_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::YbtsData& YateMessage::ybts_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::YbtsData* p = ybts_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.ybts_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::YbtsData*>(
      &::com::microsoft::cellsar::protobuf::yate::_YbtsData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::YbtsData* YateMessage::mutable_ybts_data() {
  
  if (ybts_data_ == NULL) {
    ybts_data_ = new ::com::microsoft::cellsar::protobuf::yate::YbtsData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YateMessage.ybts_data)
  return ybts_data_;
}
::com::microsoft::cellsar::protobuf::yate::YbtsData* YateMessage::release_ybts_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YateMessage.ybts_data)
  
  ::com::microsoft::cellsar::protobuf::yate::YbtsData* temp = ybts_data_;
  ybts_data_ = NULL;
  return temp;
}
void YateMessage::set_allocated_ybts_data(::com::microsoft::cellsar::protobuf::yate::YbtsData* ybts_data) {
  delete ybts_data_;
  ybts_data_ = ybts_data;
  if (ybts_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YateMessage.ybts_data)
}

// .com.microsoft.cellsar.protobuf.yate.SmsData sms_data = 6;
bool YateMessage::has_sms_data() const {
  return this != internal_default_instance() && sms_data_ != NULL;
}
void YateMessage::clear_sms_data() {
  if (GetArenaNoVirtual() == NULL && sms_data_ != NULL) delete sms_data_;
  sms_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::SmsData& YateMessage::sms_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::SmsData* p = sms_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::SmsData*>(
      &::com::microsoft::cellsar::protobuf::yate::_SmsData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::SmsData* YateMessage::mutable_sms_data() {
  
  if (sms_data_ == NULL) {
    sms_data_ = new ::com::microsoft::cellsar::protobuf::yate::SmsData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_data)
  return sms_data_;
}
::com::microsoft::cellsar::protobuf::yate::SmsData* YateMessage::release_sms_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_data)
  
  ::com::microsoft::cellsar::protobuf::yate::SmsData* temp = sms_data_;
  sms_data_ = NULL;
  return temp;
}
void YateMessage::set_allocated_sms_data(::com::microsoft::cellsar::protobuf::yate::SmsData* sms_data) {
  delete sms_data_;
  sms_data_ = sms_data;
  if (sms_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_data)
}

// .com.microsoft.cellsar.protobuf.yate.SmsFailedData sms_failed_data = 7;
bool YateMessage::has_sms_failed_data() const {
  return this != internal_default_instance() && sms_failed_data_ != NULL;
}
void YateMessage::clear_sms_failed_data() {
  if (GetArenaNoVirtual() == NULL && sms_failed_data_ != NULL) delete sms_failed_data_;
  sms_failed_data_ = NULL;
}
const ::com::microsoft::cellsar::protobuf::yate::SmsFailedData& YateMessage::sms_failed_data() const {
  const ::com::microsoft::cellsar::protobuf::yate::SmsFailedData* p = sms_failed_data_;
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_failed_data)
  return p != NULL ? *p : *reinterpret_cast<const ::com::microsoft::cellsar::protobuf::yate::SmsFailedData*>(
      &::com::microsoft::cellsar::protobuf::yate::_SmsFailedData_default_instance_);
}
::com::microsoft::cellsar::protobuf::yate::SmsFailedData* YateMessage::mutable_sms_failed_data() {
  
  if (sms_failed_data_ == NULL) {
    sms_failed_data_ = new ::com::microsoft::cellsar::protobuf::yate::SmsFailedData;
  }
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_failed_data)
  return sms_failed_data_;
}
::com::microsoft::cellsar::protobuf::yate::SmsFailedData* YateMessage::release_sms_failed_data() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_failed_data)
  
  ::com::microsoft::cellsar::protobuf::yate::SmsFailedData* temp = sms_failed_data_;
  sms_failed_data_ = NULL;
  return temp;
}
void YateMessage::set_allocated_sms_failed_data(::com::microsoft::cellsar::protobuf::yate::SmsFailedData* sms_failed_data) {
  delete sms_failed_data_;
  sms_failed_data_ = sms_failed_data;
  if (sms_failed_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.yate.YateMessage.sms_failed_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace yate
}  // namespace protobuf
}  // namespace cellsar
}  // namespace microsoft
}  // namespace com

// @@protoc_insertion_point(global_scope)
