// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace microsoft {
namespace cellsar {
namespace protobuf {
class SubscriberDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Subscriber>
     _instance;
} _Subscriber_default_instance_;
class RadioDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Radio>
     _instance;
} _Radio_default_instance_;

namespace protobuf_data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscriber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscriber, imsi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscriber, tmsi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscriber, msisdn_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Radio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Radio, stopped_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Radio, stopped_reason_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Subscriber)},
  { 8, -1, sizeof(Radio)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Subscriber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Radio_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Subscriber_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Subscriber_default_instance_);_Radio_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Radio_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\ndata.proto\022\036com.microsoft.cellsar.prot"
      "obuf\"8\n\nSubscriber\022\014\n\004imsi\030\001 \001(\t\022\014\n\004tmsi"
      "\030\002 \001(\t\022\016\n\006msisdn\030\003 \001(\t\"0\n\005Radio\022\017\n\007stopp"
      "ed\030\001 \001(\010\022\026\n\016stopped_reason\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Subscriber::kImsiFieldNumber;
const int Subscriber::kTmsiFieldNumber;
const int Subscriber::kMsisdnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Subscriber::Subscriber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.Subscriber)
}
Subscriber::Subscriber(const Subscriber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imsi().size() > 0) {
    imsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imsi_);
  }
  tmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tmsi().size() > 0) {
    tmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tmsi_);
  }
  msisdn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msisdn().size() > 0) {
    msisdn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msisdn_);
  }
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.Subscriber)
}

void Subscriber::SharedCtor() {
  imsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tmsi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msisdn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Subscriber::~Subscriber() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.Subscriber)
  SharedDtor();
}

void Subscriber::SharedDtor() {
  imsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tmsi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msisdn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Subscriber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Subscriber::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Subscriber& Subscriber::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

Subscriber* Subscriber::New(::google::protobuf::Arena* arena) const {
  Subscriber* n = new Subscriber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Subscriber::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.Subscriber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  imsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msisdn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Subscriber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.Subscriber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string imsi = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->imsi().data(), static_cast<int>(this->imsi().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.Subscriber.imsi"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string tmsi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tmsi()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tmsi().data(), static_cast<int>(this->tmsi().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.Subscriber.tmsi"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msisdn = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msisdn()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msisdn().data(), static_cast<int>(this->msisdn().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.Subscriber.msisdn"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.Subscriber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.Subscriber)
  return false;
#undef DO_
}

void Subscriber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.Subscriber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imsi = 1;
  if (this->imsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imsi().data(), static_cast<int>(this->imsi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Subscriber.imsi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->imsi(), output);
  }

  // string tmsi = 2;
  if (this->tmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tmsi().data(), static_cast<int>(this->tmsi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Subscriber.tmsi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tmsi(), output);
  }

  // string msisdn = 3;
  if (this->msisdn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msisdn().data(), static_cast<int>(this->msisdn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Subscriber.msisdn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msisdn(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.Subscriber)
}

::google::protobuf::uint8* Subscriber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.Subscriber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string imsi = 1;
  if (this->imsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->imsi().data(), static_cast<int>(this->imsi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Subscriber.imsi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->imsi(), target);
  }

  // string tmsi = 2;
  if (this->tmsi().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tmsi().data(), static_cast<int>(this->tmsi().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Subscriber.tmsi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tmsi(), target);
  }

  // string msisdn = 3;
  if (this->msisdn().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msisdn().data(), static_cast<int>(this->msisdn().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Subscriber.msisdn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msisdn(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.Subscriber)
  return target;
}

size_t Subscriber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.Subscriber)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string imsi = 1;
  if (this->imsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->imsi());
  }

  // string tmsi = 2;
  if (this->tmsi().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tmsi());
  }

  // string msisdn = 3;
  if (this->msisdn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msisdn());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Subscriber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.Subscriber)
  GOOGLE_DCHECK_NE(&from, this);
  const Subscriber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Subscriber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.Subscriber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.Subscriber)
    MergeFrom(*source);
  }
}

void Subscriber::MergeFrom(const Subscriber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.Subscriber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imsi().size() > 0) {

    imsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imsi_);
  }
  if (from.tmsi().size() > 0) {

    tmsi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tmsi_);
  }
  if (from.msisdn().size() > 0) {

    msisdn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msisdn_);
  }
}

void Subscriber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.Subscriber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subscriber::CopyFrom(const Subscriber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.Subscriber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subscriber::IsInitialized() const {
  return true;
}

void Subscriber::Swap(Subscriber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Subscriber::InternalSwap(Subscriber* other) {
  using std::swap;
  imsi_.Swap(&other->imsi_);
  tmsi_.Swap(&other->tmsi_);
  msisdn_.Swap(&other->msisdn_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Subscriber::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Subscriber

// string imsi = 1;
void Subscriber::clear_imsi() {
  imsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Subscriber::imsi() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.Subscriber.imsi)
  return imsi_.GetNoArena();
}
void Subscriber::set_imsi(const ::std::string& value) {
  
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.Subscriber.imsi)
}
#if LANG_CXX11
void Subscriber::set_imsi(::std::string&& value) {
  
  imsi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.Subscriber.imsi)
}
#endif
void Subscriber::set_imsi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.Subscriber.imsi)
}
void Subscriber::set_imsi(const char* value, size_t size) {
  
  imsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.Subscriber.imsi)
}
::std::string* Subscriber::mutable_imsi() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.Subscriber.imsi)
  return imsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Subscriber::release_imsi() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.Subscriber.imsi)
  
  return imsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Subscriber::set_allocated_imsi(::std::string* imsi) {
  if (imsi != NULL) {
    
  } else {
    
  }
  imsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imsi);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.Subscriber.imsi)
}

// string tmsi = 2;
void Subscriber::clear_tmsi() {
  tmsi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Subscriber::tmsi() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
  return tmsi_.GetNoArena();
}
void Subscriber::set_tmsi(const ::std::string& value) {
  
  tmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
}
#if LANG_CXX11
void Subscriber::set_tmsi(::std::string&& value) {
  
  tmsi_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
}
#endif
void Subscriber::set_tmsi(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
}
void Subscriber::set_tmsi(const char* value, size_t size) {
  
  tmsi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
}
::std::string* Subscriber::mutable_tmsi() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
  return tmsi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Subscriber::release_tmsi() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
  
  return tmsi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Subscriber::set_allocated_tmsi(::std::string* tmsi) {
  if (tmsi != NULL) {
    
  } else {
    
  }
  tmsi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tmsi);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.Subscriber.tmsi)
}

// string msisdn = 3;
void Subscriber::clear_msisdn() {
  msisdn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Subscriber::msisdn() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
  return msisdn_.GetNoArena();
}
void Subscriber::set_msisdn(const ::std::string& value) {
  
  msisdn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
}
#if LANG_CXX11
void Subscriber::set_msisdn(::std::string&& value) {
  
  msisdn_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
}
#endif
void Subscriber::set_msisdn(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msisdn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
}
void Subscriber::set_msisdn(const char* value, size_t size) {
  
  msisdn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
}
::std::string* Subscriber::mutable_msisdn() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
  return msisdn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Subscriber::release_msisdn() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
  
  return msisdn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Subscriber::set_allocated_msisdn(::std::string* msisdn) {
  if (msisdn != NULL) {
    
  } else {
    
  }
  msisdn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msisdn);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.Subscriber.msisdn)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Radio::kStoppedFieldNumber;
const int Radio::kStoppedReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Radio::Radio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.microsoft.cellsar.protobuf.Radio)
}
Radio::Radio(const Radio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stopped_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stopped_reason().size() > 0) {
    stopped_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stopped_reason_);
  }
  stopped_ = from.stopped_;
  // @@protoc_insertion_point(copy_constructor:com.microsoft.cellsar.protobuf.Radio)
}

void Radio::SharedCtor() {
  stopped_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stopped_ = false;
  _cached_size_ = 0;
}

Radio::~Radio() {
  // @@protoc_insertion_point(destructor:com.microsoft.cellsar.protobuf.Radio)
  SharedDtor();
}

void Radio::SharedDtor() {
  stopped_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Radio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Radio::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Radio& Radio::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

Radio* Radio::New(::google::protobuf::Arena* arena) const {
  Radio* n = new Radio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Radio::Clear() {
// @@protoc_insertion_point(message_clear_start:com.microsoft.cellsar.protobuf.Radio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stopped_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stopped_ = false;
  _internal_metadata_.Clear();
}

bool Radio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.microsoft.cellsar.protobuf.Radio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool stopped = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stopped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stopped_reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stopped_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stopped_reason().data(), static_cast<int>(this->stopped_reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.microsoft.cellsar.protobuf.Radio.stopped_reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.microsoft.cellsar.protobuf.Radio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.microsoft.cellsar.protobuf.Radio)
  return false;
#undef DO_
}

void Radio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.microsoft.cellsar.protobuf.Radio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool stopped = 1;
  if (this->stopped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->stopped(), output);
  }

  // string stopped_reason = 2;
  if (this->stopped_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stopped_reason().data(), static_cast<int>(this->stopped_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Radio.stopped_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->stopped_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.microsoft.cellsar.protobuf.Radio)
}

::google::protobuf::uint8* Radio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.microsoft.cellsar.protobuf.Radio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool stopped = 1;
  if (this->stopped() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->stopped(), target);
  }

  // string stopped_reason = 2;
  if (this->stopped_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stopped_reason().data(), static_cast<int>(this->stopped_reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.microsoft.cellsar.protobuf.Radio.stopped_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->stopped_reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.microsoft.cellsar.protobuf.Radio)
  return target;
}

size_t Radio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.microsoft.cellsar.protobuf.Radio)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string stopped_reason = 2;
  if (this->stopped_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stopped_reason());
  }

  // bool stopped = 1;
  if (this->stopped() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Radio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.microsoft.cellsar.protobuf.Radio)
  GOOGLE_DCHECK_NE(&from, this);
  const Radio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Radio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.microsoft.cellsar.protobuf.Radio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.microsoft.cellsar.protobuf.Radio)
    MergeFrom(*source);
  }
}

void Radio::MergeFrom(const Radio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.microsoft.cellsar.protobuf.Radio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stopped_reason().size() > 0) {

    stopped_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stopped_reason_);
  }
  if (from.stopped() != 0) {
    set_stopped(from.stopped());
  }
}

void Radio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.microsoft.cellsar.protobuf.Radio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Radio::CopyFrom(const Radio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.microsoft.cellsar.protobuf.Radio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Radio::IsInitialized() const {
  return true;
}

void Radio::Swap(Radio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Radio::InternalSwap(Radio* other) {
  using std::swap;
  stopped_reason_.Swap(&other->stopped_reason_);
  swap(stopped_, other->stopped_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Radio::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Radio

// bool stopped = 1;
void Radio::clear_stopped() {
  stopped_ = false;
}
bool Radio::stopped() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.Radio.stopped)
  return stopped_;
}
void Radio::set_stopped(bool value) {
  
  stopped_ = value;
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.Radio.stopped)
}

// string stopped_reason = 2;
void Radio::clear_stopped_reason() {
  stopped_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Radio::stopped_reason() const {
  // @@protoc_insertion_point(field_get:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
  return stopped_reason_.GetNoArena();
}
void Radio::set_stopped_reason(const ::std::string& value) {
  
  stopped_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
}
#if LANG_CXX11
void Radio::set_stopped_reason(::std::string&& value) {
  
  stopped_reason_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
}
#endif
void Radio::set_stopped_reason(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stopped_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
}
void Radio::set_stopped_reason(const char* value, size_t size) {
  
  stopped_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
}
::std::string* Radio::mutable_stopped_reason() {
  
  // @@protoc_insertion_point(field_mutable:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
  return stopped_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Radio::release_stopped_reason() {
  // @@protoc_insertion_point(field_release:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
  
  return stopped_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Radio::set_allocated_stopped_reason(::std::string* stopped_reason) {
  if (stopped_reason != NULL) {
    
  } else {
    
  }
  stopped_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stopped_reason);
  // @@protoc_insertion_point(field_set_allocated:com.microsoft.cellsar.protobuf.Radio.stopped_reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace cellsar
}  // namespace microsoft
}  // namespace com

// @@protoc_insertion_point(global_scope)
